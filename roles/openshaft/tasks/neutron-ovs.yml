---

- name: Install Neutron Ovs Packages
  package: 
    name: '{{ item }}'
    state: latest
  with_items: "{{ neutron_packages }}"

- name: Enable Neutron Ovs Service
  service:
    name: "{{ openvswitch_service }}"
    enabled: yes
    state: started
  notify:
   - Restart Neutron Openvswitch
  when: ansible_connection != 'docker'

- name: Restart Openvswitch Now
  meta: flush_handlers

- name: Create Neutron Ovs default bridges
  openvswitch_bridge: 
    bridge: "{{ item }}"
    state: present
  with_items:
   - 'br-int'
   - 'br-tun'

- name: Create Neutron Ovs extra bridges
  openvswitch_bridge: 
    bridge: "{{ item }}"
    state: present
  when: neutron.bridge_mappings is defined
  with_items: "{{ neutron.bridge_mappings.split(',') | map('regex_replace', '.*:(.*)', '\\1') | list }}"

- name: Add Neutron Ovs ports to extra bridges
  openvswitch_port: 
    bridge: "{{ item | regex_replace('(.*):.*', '\\1') }}"
    port: "{{ item | regex_replace('.*:(.*)', '\\1') }}"
    state: present
  when: neutron.bridge_ifaces is defined
  with_items: "{{ neutron.bridge_ifaces.split(',') }}"

- name: Create Neutron Ovs ifcfg-br-int
  template:
    src: "{{ role_path }}/files/ifcfg-br-int"
    dest: /etc/sysconfig/network-scripts/ifcfg-br-int
  when: ansible_os_family == 'RedHat'

- name: Configure Neutron Ovs
  template:
    src: "neutron.conf.{{ version }}"
    dest: "/etc/neutron/neutron.conf"
    backup: yes
  notify:
    - Restart Neutron Openvswitch

- name: Configure Neutron Ovs Plugin Link Kilo
  file:
    state: link
    dest: "/etc/neutron/plugin.ini"
    src: "/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini"
    force: yes
  notify:
    - Restart Neutron Openvswitch
  when: version == 'kilo' and plugin_ini is not defined

- name: Configure Neutron Ovs Plugin Link
  file:
    state: link
    dest: "/etc/neutron/plugin.ini"
    src: "/etc/neutron/plugins/ml2/openvswitch_agent.ini"
    force: yes
  notify:
    - Restart Neutron Openvswitch
  when: version != 'kilo' and plugin_ini is not defined

- name: Configure Neutron Ovs Kilo
  template:
    src: "openvswitch/plugin.ini"
    dest: "/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini"
    backup: yes
  notify:
    - Restart Neutron Openvswitch
  when: version == 'kilo'

- name: Configure Neutron Ovs
  template:
    src: "openvswitch/plugin.ini"
    dest: "/etc/neutron/plugins/ml2/openvswitch_agent.ini"
    backup: yes
  notify:
    - Restart Neutron Openvswitch
  when: version != 'kilo'

- name: Enable Neutron Ovs Services
  service:
    name: "{{ neutron_ovs_service }}"
    enabled: yes
    state: started
  when: ansible_connection != 'docker'

- name: Enable Neutron Ovs Cleanup
  service:
    name: "neutron-ovs-cleanup"
    enabled: yes
  when: ansible_connection != 'docker'
