---

- name: Create Registry Host entry
  lineinfile: 
   dest: /etc/hosts
   line: "{{ registry_ip}} {{ registry_url}}"
   state: present
  when: registry_ip is defined and registry_url is defined

- name: Create Registry Directory
  file:
    path: "/etc/docker/certs.d/{{ registry_url }}"
    state: directory

- name: Create Registry Certificate
  copy:
    content: "{{ registry_certificate }}"
    dest: "/etc/docker/certs.d/{{ registry_url }}/ca.crt"

- name: Download Oc Client
  command: "wget -O /root/oc.tar.gz https://github.com/openshift/origin/releases/download/v1.5.1/openshift-origin-client-tools-v1.5.1-7b451fc-linux-64bit.tar.gz"
  args:
   creates: /root/oc.tar.gz

- name: Uncompress Oc Client
  command: "tar zxvf oc.tar.gz  -C /usr/bin --strip-components=1"
  args:
   creates: /usr/bin/oc

- name: Log In Openshift
  command: "oc login {{ openshift_host }}:8443 -u {{ openshift_user }} -p {{ openshift_password }}"
  register: openshift_loggedin

- name: Log In Openshift
  command: "oc whoami -t"
  register: registry_token
  when: openshift_loggedin|succeeded

- name: Debug This shit
  debug:
   var: registry_token

- name: Login Registry
  command: "docker login https://{{ registry_url }} -u {{ openshift_user }} -p {{ registry_token.stdout }}"
  register: registry_loggedin
  when: registry_token is defined

- name: Tag Image
  command: "docker tag openshaft/{{ component }} {{ registry_url }}/{{ openshift_project }}/{{ component}}"
  register: image_tagged

- name: Tag Image
  command: "docker push {{ registry_url }}/{{ openshift_project }}/{{ component}}"
  when: registry_loggedin|succeeded and image_tagged|succeeded
