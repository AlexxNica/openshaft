---

- name: Install Common Openstack Packages
  package:
    name: '{{ item }}'
    state: latest
  with_items: "{{ openstack_packages }}"

- name: Install Swift Packages
  package: 
    name: '{{ item }}'
    state: latest
  with_items: "{{ swift_packages }}"

- name: Ensure Swift Ownership
  file:
    path: "/etc/swift"
    state: directory
    recurse: yes
    owner: root
    group: swift

- name: Configure Swift Proxy
  template:
    src: "proxy-server.conf.{{ version }}"
    dest: "/etc/swift/proxy-server.conf"
    backup: yes
  notify:
   - Restart Swift

- name: Create Swift Ring Objects
  shell: "swift-ring-builder /etc/swift/{{ item }}.builder create {{ swift_partition }} {{ swift_replicas }} 1"
  with_items:
   - 'object'
   - 'account'
   - 'container'

- name: Add Swift Ring Objects Devices
  shell: "swift-ring-builder /etc/swift/object.builder add z1-{{ item.value.ip }}:6200/{{ item.value.devices.0 }} 100"
  with_dict: "{{ swift.storage_nodes }}"

- name: Add Swift Ring Container Devices
  shell: "swift-ring-builder /etc/swift/container.builder add z1-{{ item.value.ip }}:6201/{{ item.value.devices.0 }} 100"
  with_dict: "{{ swift.storage_nodes }}"

- name: Add Swift Ring Account Devices
  shell: "swift-ring-builder /etc/swift/account.builder add z1-{{ item.value.ip }}:6202/{{ item.value.devices.0 }} 100"
  with_dict: "{{ swift.storage_nodes }}"

- name: Rebalance Swift Rings
  shell: "swift-ring-builder /etc/swift/{{ item }}.builder rebalance"
  with_items:
   - 'object'
   - 'account'
   - 'container'

- name: Create Swift User
  keystone_user:
    state: present
    endpoint: "{{ keystone_admin_url }}"
    token: "{{ keystone.admin_token }}"
    user: swift
    tenant: services
    password: "{{ swift.password }}"

- name: Grant Swift Admin Role
  keystone_user:
    endpoint: "{{ keystone_admin_url }}"
    token: "{{ keystone.admin_token }}"
    tenant: services
    user: swift
    role: admin

- name: Create Swift Service And Endpoint
  keystone_service:
    name: swift
    type: object-store
    description: "Swift Object Service"
    publicurl: "{{ swift_public_url }}"
    internalurl: "{{ swift_internal_url }}"
    adminurl: "{{ swift_admin_url }}"
    endpoint: "{{ keystone_internal_url }}"
    login_user: admin
    login_password: "{{ keystone.admin_password }}"
    tenant_name: admin
    region: "{{ common.region }}"

- name: Enable Swift Proxy
  service:
   name: "{{ item }}"
   enabled: yes
   state: started
  with_items: "{{ swift_services }}"
  when: ansible_connection != 'docker'
