---

- name: Set Swift Component
  set_fact:
    component: "swift-storage"

- include: sandbox.yml

- name: Set Swift Storage Prefix
  set_fact:
    rootdir: "{{ openshaft.rootdir }}/{{ component }}"
    packages: "{{ swift_storage_packages }}"

- name: Create Swift Rsync file
  template:
    src: swift/rsync
    dest: "{{ openshaft.rootdir }}/{{ component }}/rsync"

- name: Create Swift Rsyncd.conf file
  template:
    src: swift/rsyncd.conf
    dest: "{{ openshaft.rootdir }}/{{ component }}/rsyncd.conf"

- name: Create Swift.conf file
  template:
    src: swift/swift.conf
    dest: "{{ openshaft.rootdir }}/{{ component }}/swift.conf"

- name: Create Swift Storage Script
  template:
   src: "swift/storage.sh.j2"
   dest: "{{ rootdir }}/storage.sh"
  register: storage_file

- name: Create Swift Ring Script
  template:
   src: "swift/ring.sh.j2"
   dest: "{{ rootdir }}/ring.sh"
  register: ring_file

- name: Create Swift Storage Startfile
  template:
   src: "swift/start_storage.sh.j2"
   dest: "{{ rootdir }}/start.sh"
  register: start_file

- name: Create Swift Storage Dockerfile
  template:
    src: "swift/Dockerfile_storage.j2"
    dest: "{{ rootdir }}/Dockerfile"
  register: dockerfile
 
- name: Build Swift Storage Image
  command: "docker build --rm -t openshaft/{{ component }} {{ rootdir }}" 
  when: ring_file.changed or storage_file.changed or start_file.changed or dockerfile.changed

- name: Set Swift Storage ConfigFiles For Openshift Config Maps
  set_fact:
    configfiles:
     - storage.sh
     - ring.sh

- include: openshift.yml
  when: registry_url is defined and registry_certificate is defined and openshift_project is defined and (ring_file.changed or storage_file.changed)
