---

- name: Install Swift Storage Packages
  package: 
    name: '{{ item }}'
    state: latest
  with_items: "{{ swift_storage_packages }}"

- name: Create Swift Storage Mount Points
  file:
    path: "/srv/node/{{ item }}"
    state: directory
    recurse: yes
    owner: swift
    group: swift
    setype: swift_data_t
  with_items: "{{ swift.storage_nodes[inventory_hostname]['devices'] }}"
  when: swift.storage_nodes[inventory_hostname] is defined and swift.storage_nodes[inventory_hostname]['devices'] is defined

- name: Mount Swift Storage Devices
  mount:
    name: "/srv/node/{{ item }}"
    src: "/dev/{{ item }}"
    fstype: "{{ swift_fstype }}"
    # opts: 'context="system_u:object_r:swift_data_t:s0'
    state: mounted
  with_items: "{{ swift.storage_nodes[inventory_hostname]['devices'] }}"
  when: swift.storage_nodes[inventory_hostname] is defined and swift.storage_nodes[inventory_hostname]['devices'] is defined
    

- name: Configure Swift Storage Xinetd
  copy:
    src: rsync
    dest: /etc/xinetd.d/rsync
  notify:
   - Restart Xinetd

- name: Configure Swift Storage Rsync
  copy:
    src: rsyncd.conf
    dest: /etc/rsyncd.conf
  notify:
   - Restart Swift Storage

- name: Configure Swift Storage Object
  ini_file:
    dest: "/etc/swift/object-server.conf"
    section: DEFAULT
    option: bind_ip
    value: 0.0.0.0
  notify:
   - Restart Swift Storage

- name: Configure Swift Storage Container
  ini_file:
    dest: "/etc/swift/container-server.conf"
    section: DEFAULT
    option: bind_ip
    value: 0.0.0.0
  notify:
   - Restart Swift Storage

- name: Configure Swift Storage Account
  ini_file:
    dest: "/etc/swift/account-server.conf"
    section: DEFAULT
    option: bind_ip
    value: 0.0.0.0
  notify:
   - Restart Swift Storage

- name: Configure Swift
  template:
    src: "swift.conf"
    dest: "/etc/swift/swift.conf"
    backup: yes
  notify:
   - Restart Swift Storage

- name: Create Swift Storage Ring Objects
  shell: "swift-ring-builder /etc/swift/{{ item }}.builder create {{ swift_partition }} {{ swift_replicas }} 1"
  with_items:
   - 'object'
   - 'account'
   - 'container'

- name: Add Swift Storage Ring Objects Devices
  shell: "swift-ring-builder /etc/swift/object.builder add z1-{{ item.value.ip }}:6201/{{ item.value.devices.0 }} 100"
  with_dict: "{{ swift.storage_nodes }}"

- name: Add Swift Storage Ring Container Devices
  shell: "swift-ring-builder /etc/swift/container.builder add z1-{{ item.value.ip }}:6202/{{ item.value.devices.0 }} 100"
  with_dict: "{{ swift.storage_nodes }}"

- name: Add Swift Storage Ring Account Devices
  shell: "swift-ring-builder /etc/swift/account.builder add z1-{{ item.value.ip }}:6200/{{ item.value.devices.0 }} 100"
  with_dict: "{{ swift.storage_nodes }}"

- name: Rebalance Storage Swift Rings
  shell: "swift-ring-builder /etc/swift/{{ item }}.builder rebalance"
  with_items:
   - 'object'
   - 'account'
   - 'container'

- name: Enable Swift Storage Service
  service:
   name: "{{ item }}"
   enabled: yes
   state: started
  with_items: "{{ swift_storage_services }}"
  when: ansible_connection != 'docker'
